{
  "openapi": "3.0.0",
  "info": {
    "title": "Neural API",
    "version": "1.0.0",
    "description": "API for neural network text models"
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a new user with email and password.",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "user@example.com" },
                  "password": { "type": "string", "example": "password123" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": { "type": "string" },
                        "id": { "type": "integer" },
                        "balance": { "type": "integer" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Authenticate a user",
        "description": "Logs in a user with email and password, returning a JWT token.",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "user@example.com" },
                  "password": { "type": "string", "example": "password123" }
                },
                "required": ["email", "password"]
              }
            }
          },
          "responses": {
            "200": {
              "description": "Authentication successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": { "type": "string" }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Invalid credentials"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      }
    },
    "/models/generate": {
      "post": {
        "summary": "Generate text using a model",
        "description": "Uses a specific model to generate text based on the provided messages.",
        "tags": ["Models"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": { "type": "string", "example": "gpt-4" },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": { "type": "string", "example": "user" },
                        "content": { "type": "string", "example": "Hello, how are you?" }
                      }
                    }
                  },
                  "max_tokens": { "type": "integer", "example": 50 }
                },
                "required": ["model", "messages"]
              }
            }
          },
          "responses": {
            "200": {
              "description": "Text generation successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "choices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "object",
                              "properties": {
                                "role": { "type": "string" },
                                "content": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      }
    },
    "/models/stream": {
      "post": {
        "summary": "Stream text generation using a model",
        "description": "Streams text generation results using a specific model via Server-Sent Events (SSE).",
        "tags": ["Models"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": { "type": "string", "example": "gpt-4" },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": { "type": "string", "example": "user" },
                        "content": { "type": "string", "example": "Hello, how are you?" }
                      }
                    }
                  },
                  "max_tokens": { "type": "integer", "example": 50 }
                },
                "required": ["model", "messages"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stream started successfully",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "string",
                  "example": "data: {\"message\": \"Hello! How can I help you?\"}\n\n"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Invalid model or messages" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Internal server error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/add-balance": {
      "post": {
        "summary": "Add balance to a user (admin only)",
        "tags": ["Admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "integer" },
                  "amount": { "type": "integer" }
                },
                "required": ["userId", "amount"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Balance updated successfully" },
          "403": { "description": "Access denied" },
          "400": { "description": "Invalid input or user not found" }
        }
      }
    }
  }
}
